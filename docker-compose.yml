services:
  db:
    image: postgres:${POSTGRES_IMG_VERSION}
    container_name: ${PROJECT_NAME}_db
    environment:
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_USER=${POSTGRES_USER}
      - PGDATA=/var/lib/postgresql/data/pgdata
    volumes:
      - odoo-db:/var/lib/postgresql/data/pgdata
    networks:
      - binaural
  odoo:
    container_name: ${PROJECT_NAME}
    build:
        context: .
        dockerfile: ./.resources/Dockerfile
    depends_on:
      - db
    ports:
      - "${PORT_SERVICE_HOST_ODOO}:${PORT_SERVICE_CONTAINER_ODOO}"
    volumes:
      - odoo-web:/var/lib/odoo
      - ./src:/home/odoo/src
      - ./backups:/home/odoo/backups
      - odoo_data:/home/odoo/data
      # - dep:/usr/lib
      # - dep2:/usr/local/lib
      # - dep3:/home/odoo/.local/lib
    command: odoo -u binaural_accountant --dev=all
    environment:
      CUSTOM_CONFIG: |-
        [options]
      CUSTOM_REQUIREMTNS: |-
        # custom pip librearies
      CUSTOM_ENTRYPOINT: |-
        #!/bin/bash
        # pip install --user --no-cache-dir -e /home/odoo/custom/odoo
        # pip install --user --no-cache-dir pyopenssl
      SMTP_SERVER: mailhog
      SMTP_PORT: 1025
      DBFILTER: ${DBFILTER}
      SERVER_WIDE_MODULES: ${SERVER_WIDE_MODULES}
      MAX_CRON_THREADS: ${MAX_CRON_THREADS}
      WORKERS: ${WORKERS}
      CUSTOM_ENABLED: ${CUSTOM_ENABLED}
      IGNORE_REPO: ${IGNORE_REPO}
      LIST_DB: ${LIST_DB}
      WITHOUT_DEMO: ${WITHOUT_DEMO}
      ADMIN_PASSWORD: ${ADMIN_PASSWORD}
      PROXY_MODE: ${PROXY_MODE}
      SERVER_MODE: ${SERVER_MODE}
      AEROO_DOCS_HOST: ${AEROO_DOCS_HOST}
      LIMIT_TIME_REAL_CRON: ${LIMIT_TIME_REAL_CRON}
      LIMIT_TIME_REAL: ${LIMIT_TIME_REAL}
      UNACCENT: ${UNACCENT}
      LOG_LEVEL: info
    networks:
      binaural:

volumes:
  odoo-web:
  odoo-db:  
  odoo_data:

networks:
  binaural:
    external: true
